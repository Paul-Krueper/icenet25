# Peakfit steering code
#
# Remember that yaml scientific notation requires 1.0 (dots)
# and (+) and (-) for the exponent (e.g. 1.0e+8)
#
#
# Tips: One can simplify the model by settings some parameters to
# their "symmetric" (e.g. 0) values and fixing those.
#
# m.mieskolainen@imperial.ac.uk, 2024

input_path:   './actions-stash/input/icefit/dqcd_2018_test/flat/muon/generalTracks/JPsi'
output_name:  'tune0'

years:    [2018]         # [2016, 2017, 2018]
fitrange: [2.91, 3.29]   # Nominal fit window (GeV)
systematics: ['Nominal'] # ['Nominal', 'nVertices_Up', 'nVertices_Down']

# List of systematic variations active
variations: ['DEFAULT']  #, 'SYMMETRIC-SIGNAL_CB_asym_RBW', 'MASS-WINDOW-DOWN', 'MASS-WINDOW-UP']

num_cpus: 0 # put 0 for automatic, set manually to 1 if problems (ray not used with 1)

fit_type: 'single' # 'single', 'dual', 'dual-unitary-I', 'dual-unitary-II'


fit:

  S:
    func:    'generic_conv_pdf'
    args:
      norm:     True
      Nmin:     128   # minimum number of function samples for convolution integral
      xfactor:  0.3   # extra domain extension factor for convolution integral (0.2 gives +-20%)
      
      pdf_pair:   ['CB_pdf', 'asym_RBW_pdf']  # name of pdfs to be convoluted
      par_index:  [[0,1,2,3], [0,4,5]]        # parameter indices per pdf (use same index for shared parameters)
    
    # -----------------------------------------------
    # See /docs/pdf/peakfit.pdf
    
    # `single`, `dual` and `dual-unitary-I` [signal yield ~ count units]
    theta_start:  100.0
    theta_limit:  [1.0e-3, 1.0e+9]
    theta_fixed:  False
    
    # `dual`, `dual-unitary-I` and `dual-unitary-II` [efficiency]
    eps_start: 0.5
    eps_limit: [0.0, 1.0]
    eps_fixed: False

    # `dual-unitary-II` [signal fraction]
    f_start: 0.5
    f_limit: [0.0, 1.0]
    f_fixed: False
    # -----------------------------------------------

    # Gamma(J/psi) = 9.32e-05 GeV (very narrow!)
    # CB_param = par[0],par[1],par[2],par[3] ~ Crystal-Ball detector smearing x radiative
    # asym_RBW = par[0],par[4],par[5]        ~ J/Psi resonance ~ [initial state pdf x form factor x breit-wigner]
    
    # Fit function
    p_name:   ['M0', 'sigma', 'n', 'alpha', 'Gamma', 'asym']
    p_start:  [3.097, 0.02, 1.001, 5.0, 1.0e-4, -0.01]
    p_limit:  [[3.085, 3.12], [0.01, 0.05], [1.001, 2.0], [0.001, 10.0], [9.32e-5, 0.01], [-3.0, 3.0]]
    p_fixed:  [False, False, False, False, False, False]
  
  B:
    func:    'exp_pdf'
    args:
      norm:     True
    
    # -----------------------------------------------
    # See /docs/pdf/peakfit.pdf
    
    # `single` and `dual` [background yield ~ count units]
    theta_start:  10.0
    theta_limit:  [1.0e-3, 1.0e+9]
    theta_fixed:  False
    
    # `dual`, `dual-unitary-I` and `dual-unitary-II` [efficiency]
    eps_start: 0.5
    eps_limit: [0.0, 1.0]
    eps_fixed: False
    # -----------------------------------------------
    
    # Fit function
    p_name:   ['lambda']
    p_start:  [1.0e-4]
    p_limit:  [[1.0e-5, 4.0]]
    p_fixed:  [False]


  # Add here more fit components in linear superposition (only with 'single' mode), by giving a unique string label
  # ...


# Fit algorithm parameters
techno:
  rng_seed: 1234

  loss_type: 'chi2'                # 'chi2', 'huber', 'nll'
  use_limits: True                 # Use parameter bounds
  zerobin: 0.1                     # Minimum number of counts in a valid bin
  
  huber_delta: 1.0                 # 'huber' loss threshold parameter
  
  # Use enough 'trials' (otherwise can get stuck in bad local minima)
  
  ncall_scipy_simplex: 0           # Number of scipy search calls  (recursively)
  ncall_mystic_diffev2:     1      # Number of Mystic solver calls (recursively)
  ncall_mystic_fmin_powell: 1      # Number of Mystic solver calls (recursively)

  ncall_minuit_scan:     0         # Number of brute force 1D-scan calls
  ncall_minuit_simplex:  0         # Number of Nelder-Mead simplex search calls
  ncall_minuit_gradient: 10000     # Number of Minuit gradient search calls
  
  minos: True                # If True, Minuit MINOS uncertainties (slower but best), otherwise HESSE
  migrad_first_step: 0.001   # First step size (relative percentage), set None for migrad heuristic

  min_ndof: 1            # Minimum number of d.o.f required
  max_chi2: 1200         # Maximum chi2/ndf for a succesful fit
  min_count: 5           # Minimum number of total entries (sum of bin content) in the histogram
  trials: 10             # Number of random restarts (all are executed and inspected, the best is kept)
  rand_sigma: 0.5        # Random perturbation scale for initial values per trial

  set_to_nan: True       # Set parameters after the fit to NaN if not passing max_chi2 or min_count

  strategy: 2            # Default 1 (0 ~ fast, 1 ~ balanced, 2 ~ accurate)
  tol: 0.1               # Default 0.1, https://iminuit.readthedocs.io/en/stable/reference.html#iminuit.Minuit.tol

  cov_eps: 0.0           # Covariance matrix post-regularization (added to diagonal) (set to 0 for none, can bias!)
  
  draw_mnmatrix: False   # Draw MINOS profile likelihood scan 2D contours (very slow)
